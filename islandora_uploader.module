<?php

/**
 * Create the help
 * @param type $path
 * @param type $arg
 * @return string 
 */
function islandora_uploader_help($path, $arg) {
    $output = ''; 
    switch ($path) {
        case "admin/help#islandora_uploader":
            $output = '<p>'.  t("Islandora Uploader") .'</p>';
        break;
    }
    return $output;
} 

/**
 * Define the security perms
 * @return type 
 */
function islandora_uploader_perm() {

    // Return an array of permisions
    return array('upload', 'remove');
} 

/**
 * Islandora menu hook
 * @return string 
 */
function islandora_uploader_menu() {

    // Create an array to return
    $items = array();

    $items['islandora_uploader'] = array(
        'title' => 'Islandora Uploader',
        'page callback' => 'islandora_uploader_upload_page',
        'access arguments' => array('upload'),
        'type' => MENU_NORMAL_ITEM
    );
    $items['islandora_uploader_get_limit'] = array(
        'title' => 'Islandora Uploader Get Limit',
        'page callback' => 'islandora_uploader_get_limit',
        'access arguments' => array('upload'),
        'type' => MENU_NORMAL_ITEM
    );
    $items['islandora_uploader_upload_block'] = array(
        'title' => 'Islandora Uploader Upload Block',
        'page callback' => 'islandora_uploader_upload_block',
        'access arguments' => array('upload'),
        'type' => MENU_NORMAL_ITEM
    );
    
    // Return the link
    return $items;
}

/**
 * Islandora uploader block
 * @param type $op
 * @param type $delta
 * @param type $edit
 * @return string 
 */
function islandora_uploader_block($op = 'list', $delta = 0, $edit = array()) {  
   
    // Create the block array to be returned at the end
    $block = array();
    
    if ($op == "list") {

        // Create the first block
        $block[0]["info"] = t('Islandora Uploader Block');
    } 
    elseif ($op == "view") { 
    
        $block['subject'] = 'islandora uploader subject';
        $block['content'] = 'copy paste tags here';
    }
    elseif ($op == "save") {
        
        // Reminders for later
        //var_dump($op);
    } 
    elseif ($op == "configure") {
        // Reminders for later
        //var_dump($op);
    }
    
    return $block; 
}

/**
 * Islandora admin form
 * @return type 
 */
function islandora_uploader_admin() {
    
    // Create an array to return later
    $form = array();

    // Create and add elements to the form
    $form['islandora_uploader_get_limit_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Get Limits URL'),
        '#default_value' => variable_get('islandora_uploader_get_limit_url', 'getlimit'),
        '#size' => 60,
        '#maxlength' => 60,
        '#description' => t("The endpoint to get the server limits."),
        '#required' => TRUE,
    );
    
    // Create and add elements to the form
    $form['islandora_uploader_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Upload URL'),
        '#default_value' => variable_get('islandora_uploader_url', 'uploadblock'),
        '#size' => 60,
        '#maxlength' => 60,
        '#description' => t("The uploader endpoint."),
        '#required' => TRUE,
    );
    // Return the form
    return system_settings_form($form);
}

/**
 * Islandora admin validator
 * @param type $form
 * @param type $form_state 
 */
function islandora_uploader_admin_validate($form, &$form_state) {
    
    // Get the url from the form
    $limit = $form_state['values']['islandora_uploader_get_limit_url'];

    // Get the url from the form
    $url = $form_state['values']['islandora_uploader_url'];
}


function islandora_uploader_upload_page() {

    // Add the uploader code
    drupal_add_js(drupal_get_path('module', 'islandora_uploader') . '/uploader.js');
    
    // Page holds the look and feel and is returned at the end
    $page_content = '
        <div id="uploadermessagearea">
            <output id="uploadermessage"></output>
        </div>
        <div id="uploaderform" hidden="true">
            <table id="filelist" border=1>
                <tbody>
                </tbody>
            </table>
            <form action="" method="POST" enctype="multipart/form-data">
                <input type="file" id="uploaderfiles" name="uploaderfiles[]" multiple />
            </form>
            <output id="uploaderfilelist"></output>
        </div>
    ';
        
    // Return the conent for drupal to render
    return $page_content;
}

function islandora_uploader_get_limit() {

    // Require message
    module_load_include('inc', 'islandora_uploader', 'Messages');

    // Create a message
    $message = new SendMessage('getlimit', 1);

    // Store all the defaults
    $message->uploadsize = (int)(ini_get('upload_max_filesize')) * 1024 * 1024;
    $message->postsize = (int)(ini_get('post_max_size')) * 1024 * 1024;
    $message->memorylimit = (int)(ini_get('memory_limit')) * 1024 * 1024;

    // Get the lowest limit
    $message->maxupload = min($message->uploadsize, $message->postsize, $message->memorylimit, 1024*1024*4);

    // Echo the results
    echo($message);
    return $message;

}

function islandora_uploader_upload_block() {

    // Include requirements
    module_load_include('inc', 'islandora_uploader', 'Messages');
    module_load_include('inc', 'islandora_uploader', 'FileAssemble');

    // Create the file assemble class
    $fileUploader = new FileAssemble($_POST['filename'], $_POST['checksum'], $_POST['totalblocks']);

    // Add the data
    $fileUploader->addBlock($_POST['index'], $_POST['block']);

    // Create a response
    $resultMessage = new SendMessage("uploadBlockResults", 1);

    // Tell the client what blocks are missing
    $missingList = $fileUploader->getMissing();

    // Get the first element in the list
    $resultMessage->missing = $missingList[0];

    // Echo the results
    //echo( json_encode(array("missing" =>  $missingList[0])) );
    echo($resultMessage);
    
    return $message;
}

